<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R 꿀팁 | Hyunsung Kim</title>
    <link>https://statkim.github.io/hyunsungkim/tag/r-%EA%BF%80%ED%8C%81/</link>
      <atom:link href="https://statkim.github.io/hyunsungkim/tag/r-%EA%BF%80%ED%8C%81/index.xml" rel="self" type="application/rss+xml" />
    <description>R 꿀팁</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2025 Hyunsung Kim</copyright><lastBuildDate>Thu, 28 Jan 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://statkim.github.io/hyunsungkim/media/icon_hub7ff0c59a58c82593d3b34e630c36d38_35958_512x512_fill_lanczos_center_3.png</url>
      <title>R 꿀팁</title>
      <link>https://statkim.github.io/hyunsungkim/tag/r-%EA%BF%80%ED%8C%81/</link>
    </image>
    
    <item>
      <title>변수명을 문자열 형식으로 자유롭게 다루기 - get과 assign</title>
      <link>https://statkim.github.io/hyunsungkim/post/2021-01-28-get-assign/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/2021-01-28-get-assign/</guid>
      <description>
&lt;script src=&#34;https://statkim.github.io/hyunsungkim/post/2021-01-28-get-assign/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;에서 데이터를 다루면서 어쩌면 다음과 같은 경험을 해보신 적이 있으실 겁니다.&lt;/p&gt;
&lt;p&gt;변수명이 &lt;code&gt;weather_Jeju, weather_Seoul, weather_Busan, ...&lt;/code&gt; 으로 되어있고, 우리는 이 데이터에 같은 처리를 해주고 싶습니다.
하지만 각 변수마다 같은 코드를 반복하여 작성하게 되면 코드가 너무 길어지게 되죠. . .&lt;/p&gt;
&lt;p&gt;이런 경우에 변수명을 &lt;strong&gt;문자열 형식&lt;/strong&gt;으로 자유롭게 가져오고 다시 할당해줄 때 사용할 수 있는 &lt;strong&gt;R&lt;/strong&gt; 함수가 있는데, 바로 &lt;code&gt;get()&lt;/code&gt;과 &lt;code&gt;assign()&lt;/code&gt;입니다. 이 두 함수는 R base에 있는 함수로 따로 패키지 설치 없이 사용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;get---문자열-형식으로-되어있는-변수-불러오기&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;get() - 문자열 형식으로 되어있는 변수 불러오기&lt;/h1&gt;
&lt;p&gt;다음과 같이 3개의 변수가 있다고 가정해봅시다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_A &amp;lt;- 1:5
data_B &amp;lt;- 11:15
data_C &amp;lt;- 21:25&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;get()&lt;/code&gt; 함수를 사용하는 법은 간단합니다.
다음과 같이 함수 argument로 &lt;strong&gt;“문자열 형태의 변수명”&lt;/strong&gt;을 넣어주면 끝입니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get(&amp;quot;문자열 형태의 변수명&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;즉, &lt;code&gt;data_A&lt;/code&gt;를 가져오는 방법은 다음과 같습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get(&amp;quot;data_A&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 2 3 4 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;또는 변수명이 비슷한 형태를 따른다면 &lt;code&gt;paste()&lt;/code&gt; 함수를 활용하여 다음과 같이 반복문에 적용할 수도 있습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;)) {
  var_name &amp;lt;- paste(&amp;quot;data_&amp;quot;, i, sep = &amp;quot;&amp;quot;)
  
  print(var_name)
  print(get(var_name))
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data_A&amp;quot;
## [1] 1 2 3 4 5
## [1] &amp;quot;data_B&amp;quot;
## [1] 11 12 13 14 15
## [1] &amp;quot;data_C&amp;quot;
## [1] 21 22 23 24 25&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;assign---문자열-형식으로-되어있는-변수에-새로운-값-할당하기&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;assign() - 문자열 형식으로 되어있는 변수에 새로운 값 할당하기&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;assign()&lt;/code&gt;은 &lt;code&gt;get()&lt;/code&gt;과 반대로 문자열 형태로 되어있는 변수에 값을 할당할 때 사용할 수 있으며, 2개의 argument가 필요합니다.
첫 번째 argument에는 &lt;strong&gt;“문자열 형태의 변수명”&lt;/strong&gt;, 두 번째 argument에는 &lt;strong&gt;“변수에 넣을 값”&lt;/strong&gt;을 넣어주면 됩니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assign(&amp;quot;문자열 형태의 변수명&amp;quot;, &amp;quot;변수에 넣을 값&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;예를 들어, 새로운 변수 &lt;code&gt;data_D&lt;/code&gt;에 &lt;code&gt;c(1:5)*5&lt;/code&gt; 값을 할당하는 법은 다음과 같습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# data_D &amp;lt;- c(1:5)*5   # 아래와 같은 결과
assign(&amp;quot;data_D&amp;quot;, c(1:5)*5)
print(data_D)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  5 10 15 20 25&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
