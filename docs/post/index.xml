<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Hyunsung Kim</title>
    <link>https://statkim.github.io/hyunsungkim/post/</link>
      <atom:link href="https://statkim.github.io/hyunsungkim/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2025 Hyunsung Kim</copyright><lastBuildDate>Sun, 17 Jul 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://statkim.github.io/hyunsungkim/media/icon_hub7ff0c59a58c82593d3b34e630c36d38_35958_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://statkim.github.io/hyunsungkim/post/</link>
    </image>
    
    <item>
      <title>R package 만들기 2</title>
      <link>https://statkim.github.io/hyunsungkim/post/2022-07-17-rpackage-2/</link>
      <pubDate>Sun, 17 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/2022-07-17-rpackage-2/</guid>
      <description>
&lt;script src=&#34;https://statkim.github.io/hyunsungkim/post/2022-07-17-rpackage-2/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;div id=&#34;license-추가하기&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;License 추가하기&lt;/h2&gt;
&lt;p&gt;패키지의 License는 다음의 함수를 사용하여 생성할 수 있습니다.
여기서는 흔하게 사용하는 MIT License를 사용해보겠습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::use_mit_license()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;✓ Setting License field in DESCRIPTION to &amp;#39;MIT + file LICENSE&amp;#39;
✓ Writing &amp;#39;LICENSE&amp;#39;
✓ Writing &amp;#39;LICENSE.md&amp;#39;
✓ Adding &amp;#39;^LICENSE\\.md$&amp;#39; to &amp;#39;.Rbuildignore&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;img/license_ex.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;r-함수-추가하기&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;R 함수 추가하기&lt;/h2&gt;
&lt;p&gt;이제 R package에 포함하고자 하는 함수를 생성해보겠습니다.
우선 다음의 코드로 &lt;code&gt;R/my_Rfunction.R&lt;/code&gt; 파일을 생성할 수 있습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::use_r(&amp;quot;my_Rfunction&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;✓ Setting active project to &amp;#39;/Users/hyunsung/Desktop/Rproject/fda.manifold&amp;#39;
• Modify &amp;#39;R/my_Rfunction.R&amp;#39;
• Call `use_test()` to create a matching test file&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;이제 &lt;code&gt;R/my_Rfunction.R&lt;/code&gt; 파일을 열어서 다음의 내용을 입력해줍니다.
벡터를 받아와서 결측값을 제외하여 합하는 &lt;code&gt;add()&lt;/code&gt;라는 함수를 만들었는데요.
&lt;strong&gt;패키지를 만들 때에 주의할 점으로 &lt;code&gt;base&lt;/code&gt; 함수가 아닌 다른 패키지에 포함되어 있는 함수를 사용할 경우에는 &lt;code&gt;패키지명::함수&lt;/code&gt;와 같은 방식으로 사용해야만 합니다.&lt;/strong&gt;
여기서는 &lt;code&gt;stats&lt;/code&gt; 패키지에 있는 &lt;code&gt;na.omit()&lt;/code&gt; 함수를 사용하기 위해 &lt;code&gt;stats::na.omit()&lt;/code&gt;과 같이 입력해주었습니다.
물론 패키지 이름을 생략하여 사용할 수 있는 방법이 있긴 하지만, 그보다는 작업시 &lt;strong&gt;다른 패키지 안의 같은 이름을 가진 함수끼리의 충돌을 방지&lt;/strong&gt;하는 차원에서 이러한 방식을 추천드립니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#&amp;#39; 함수 이름 (Title)
#&amp;#39;
#&amp;#39; 함수 설명 (Description)
#&amp;#39; 여러 줄로도 적을 수 있음
#&amp;#39;
#&amp;#39; @param x 함수의 input parameter
#&amp;#39; @export
add &amp;lt;- function(x) {
    sum(stats::na.omit(x))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;#&#39;&lt;/code&gt;로 시작되는 부분은 함수의 설명을 적어주는 부분인데요. (이는 &lt;code&gt;roxygen2&lt;/code&gt;라는 패키지를 통해 변환해줍니다.)
첫 번째 줄에는 함수의 이름(Title), 두 번째 문단에는 함수의 설명(Description)을 입력해주면 됩니다.
&lt;code&gt;@param&lt;/code&gt;은 함수읠 input parameter(Arguments)와 그에 대한 설명을 적어주고, &lt;code&gt;@export&lt;/code&gt;는 이 함수를 패키지에 속해있는 함수로 사용하겠다라는 의미입니다.&lt;/p&gt;
&lt;p&gt;다음의 코드로 위에서 생성한 함수의 manual를 생성해주게 되고, &lt;code&gt;man&lt;/code&gt; 폴더가 생성되고 그 안에 &lt;code&gt;add.Rd&lt;/code&gt;라는 manual 파일이 생성되게 됩니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::document()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ℹ Updating fda.manifold documentation
ℹ Loading fda.manifold
Writing NAMESPACE
Writing NAMESPACE
Writing fda.manifold-package.Rd
Writing add.Rd&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;img/ftn_man.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;다음과 같이 함수의 설명을 확인해보면, 우리가 입력해준 내용이 나타나는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;?add&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;img/ex_ftn_help.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;패키지-check&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;패키지 check&lt;/h2&gt;
&lt;p&gt;이제 &lt;code&gt;R CMD check&lt;/code&gt;를 통해 이 패키지가 정상적으로 사용될 수 있는지에 대한 확인을 해주어야 하는데요.
이는 Rstudio에서 &lt;code&gt;Build&lt;/code&gt; 탭에 &lt;code&gt;Check&lt;/code&gt; 버튼을 눌러주거나&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/cmd_check.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;아래의 함수를 사용해주면 됩니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::check()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;아래와 같이 아무런 errors나 warnings, notes가 나타나지 않으면 현재 패키지 작동에 문제가 없다는 것을 의미합니다.
만약 이 과정에서 문제가 있다는 메시지가 있을 경우, 내용을 보고 함수나 다른 설정을 수정해준 후에 다시 &lt;code&gt;R CMD check&lt;/code&gt;를 해주면 됩니다.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0 errors ✓ | 0 warnings ✓ | 0 notes ✓

R CMD check succeeded&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reference&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://r-pkgs.org/whole-game.html&#34; class=&#34;uri&#34;&gt;https://r-pkgs.org/whole-game.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.danieldsjoberg.com/writing-R-packages/&#34; class=&#34;uri&#34;&gt;http://www.danieldsjoberg.com/writing-R-packages/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>R package 만들기 1</title>
      <link>https://statkim.github.io/hyunsungkim/post/2022-07-04-rpackage-1/</link>
      <pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/2022-07-04-rpackage-1/</guid>
      <description>
&lt;script src=&#34;https://statkim.github.io/hyunsungkim/post/2022-07-04-rpackage-1/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;오늘부터 &lt;strong&gt;R package&lt;/strong&gt;를 만들어서 GitHub을 통해 배포할 수 있는 방법에 대해 정리해보려 합니다.
이 방법은 cran 대신, 개인 &lt;strong&gt;GitHub에 업로드하여 패키지를 다운 및 사용&lt;/strong&gt;할 수 있는 방법입니다. (아래 예시 코드에서 두번째 방식으로 패키지를 다운받는 방법입니다.)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# cran에 있는 패키지 설치
install.package(&amp;quot;패키지명&amp;quot;)

# GitHub에 있는 패키지 설치
devtools::install_github(&amp;quot;statKim/패키지명&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;그럼, 패키지를 만들고 GitHub에 업로드하는 것으로 먼저 시작해보죠!&lt;/p&gt;
&lt;div id=&#34;패키지-만들기&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;패키지 만들기&lt;/h2&gt;
&lt;p&gt;먼저 RStudio를 실행하고, &lt;code&gt;usethis&lt;/code&gt;라는 패키지를 먼저 설치해줍니다.
&lt;code&gt;usethis&lt;/code&gt;에는 R 패키지 개발에 있어 여러 유용한 함수들이 들어있고, 이는 공식 홈페이지인 &lt;a href=&#34;https://usethis.r-lib.org/&#34; class=&#34;uri&#34;&gt;https://usethis.r-lib.org/&lt;/a&gt; 에서 확인할 수 있습니다.
(웬만한 R 패키지 세팅에 대한 기능은 대부분 포함되어 있기 떄문에, 패키지에 포함할 함수 코드부분을 제외한 설정에 있어서는 되도록 &lt;strong&gt;usethis 패키지에 내장된 함수를 사용하기를 권장&lt;/strong&gt;합니다!)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;usethis&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;usethis&lt;/code&gt; 패키지 안의 &lt;code&gt;usethis::create_package()&lt;/code&gt;라는 함수를 이용하여 &lt;strong&gt;패키지를 생성&lt;/strong&gt;할 수 있는데요.
다음과 같이 함수 인자로 &lt;code&gt;Rproject_저장경로/패키지_이름&lt;/code&gt;을 넣어주면 됩니다. (여기서는 &lt;code&gt;fda.manifold&lt;/code&gt;라는 패키지를 만들어보겠습니다.)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::create_package(&amp;quot;~/Desktop/Rproject/fda.manifold&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;✓ Creating &amp;#39;/Users/hyunsung/Desktop/Rproject/fda.manifold/&amp;#39;
✓ Setting active project to &amp;#39;/Users/hyunsung/Desktop/Rproject/fda.manifold&amp;#39;
✓ Creating &amp;#39;R/&amp;#39;
✓ Writing &amp;#39;DESCRIPTION&amp;#39;
Package: fda.manifold
Title: What the Package Does (One Line, Title Case)
Version: 0.0.0.9000
Authors@R (parsed):
    * First Last &amp;lt;first.last@example.com&amp;gt; [aut, cre] (YOUR-ORCID-ID)
Description: What the package does (one paragraph).
License: `use_mit_license()`, `use_gpl3_license()` or friends to
    pick a license
Encoding: UTF-8
LazyData: true
Roxygen: list(markdown = TRUE)
RoxygenNote: 7.1.2
✓ Writing &amp;#39;NAMESPACE&amp;#39;
✓ Writing &amp;#39;fda.manifold.Rproj&amp;#39;
✓ Adding &amp;#39;^fda\\.manifold\\.Rproj$&amp;#39; to &amp;#39;.Rbuildignore&amp;#39;
✓ Adding &amp;#39;.Rproj.user&amp;#39; to &amp;#39;.gitignore&amp;#39;
✓ Adding &amp;#39;^\\.Rproj\\.user$&amp;#39; to &amp;#39;.Rbuildignore&amp;#39;
✓ Opening &amp;#39;/Users/hyunsung/Desktop/Rproject/fda.manifold/&amp;#39; in new RStudio session
✓ Setting active project to &amp;#39;&amp;lt;no active project&amp;gt;&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;그럼 위의 결과가 나오면서 새로운 RStudio 창이 열리게 되고, 아래의 그림의 구조를 가지는 &lt;strong&gt;Rproject가 생성&lt;/strong&gt;되게 됩니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/create_package.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;패키지-document-생성&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;패키지 document 생성&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::use_package_doc()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;✓ Setting active project to &amp;#39;/Users/hyunsung/Desktop/Rproject/fda.manifold&amp;#39;
✓ Writing &amp;#39;R/fda.manifold-package.R&amp;#39;
• Modify &amp;#39;R/fda.manifold-package.R&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;img/create_document.png&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;git-사용&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;git 사용&lt;/h2&gt;
&lt;p&gt;GitHub에 패키지를 업로드하기 위해서, &lt;strong&gt;git&lt;/strong&gt;을 사용하도록 설정해주어야 하는데요.
다음의 코드를 입력하여 현재 Rproject를 git 폴더형태로 만들 수 있습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::use_git()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;✓ Initialising Git repo
✓ Adding &amp;#39;.Rhistory&amp;#39;, &amp;#39;.Rdata&amp;#39;, &amp;#39;.httr-oauth&amp;#39;, &amp;#39;.DS_Store&amp;#39; to &amp;#39;.gitignore&amp;#39;
There are 6 uncommitted files:
* &amp;#39;.gitignore&amp;#39;
* &amp;#39;.Rbuildignore&amp;#39;
* &amp;#39;DESCRIPTION&amp;#39;
* &amp;#39;fda.manifold.Rproj&amp;#39;
* &amp;#39;NAMESPACE&amp;#39;
* &amp;#39;R/&amp;#39;
Is it ok to commit them?

1: Negative
2: No way
3: Yeah

Selection: 3
✓ Adding files
✓ Making a commit with message &amp;#39;Initial commit&amp;#39;
• A restart of RStudio is required to activate the Git pane
Restart now?

1: Absolutely not
2: No
3: Definitely

Selection: 3&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;github-연결-및-repository-생성&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;GitHub 연결 및 repository 생성&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;이 부분은 기존에 RStudio를 본인의 GitHub 계정과 연결되어 있는 경우에 가능합니다!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;로컬에서 git 폴더를 만들었으니, &lt;strong&gt;이제 GitHub 원격저장소에 올리면 끝입니다!&lt;/strong&gt;
다음의 코드를 실행하면, 자동으로 본인의 GitHub에 패키지 이름으로 repository를 생성해주고 push까지 해주게 됩니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;usethis::use_github()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;ℹ Defaulting to &amp;#39;https&amp;#39; Git protocol
✓ Setting active project to &amp;#39;/Users/hyunsung/Desktop/Rproject/fda.manifold&amp;#39;
✓ Checking that current branch is default branch (&amp;#39;master&amp;#39;)
✓ Creating GitHub repository &amp;#39;statKim/fda.manifold&amp;#39;
✓ Setting remote &amp;#39;origin&amp;#39; to &amp;#39;https://github.com/statKim/fda.manifold.git&amp;#39;
✓ Setting URL field in DESCRIPTION to &amp;#39;https://github.com/statKim/fda.manifold&amp;#39;
✓ Setting BugReports field in DESCRIPTION to &amp;#39;https://github.com/statKim/fda.manifold/issues&amp;#39;
There is 1 uncommitted file:
* &amp;#39;DESCRIPTION&amp;#39;
Is it ok to commit it?

1: For sure
2: Absolutely not
3: Not now

Selection: 1
✓ Adding files
✓ Making a commit with message &amp;#39;Add GitHub links to DESCRIPTION&amp;#39;
✓ Pushing &amp;#39;master&amp;#39; branch to GitHub and setting &amp;#39;origin/master&amp;#39; as upstream branch
✓ Opening URL &amp;#39;https://github.com/statKim/fda.manifold&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;그리고 자동으로 창 하나가 열리면서 다음의 GitHub repository에 잘 업로드되어 있는 것을 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;img/github_commit.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;reference&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://r-pkgs.org/whole-game.html&#34; class=&#34;uri&#34;&gt;https://r-pkgs.org/whole-game.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.danieldsjoberg.com/writing-R-packages/&#34; class=&#34;uri&#34;&gt;http://www.danieldsjoberg.com/writing-R-packages/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>2020 12 01 R Rmarkdown</title>
      <link>https://statkim.github.io/hyunsungkim/post/2020-12-01-r-rmarkdown/</link>
      <pubDate>Sat, 27 Nov 2021 11:29:39 +0900</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/2020-12-01-r-rmarkdown/</guid>
      <description></description>
    </item>
    
    <item>
      <title>변수명을 문자열 형식으로 자유롭게 다루기 - get과 assign</title>
      <link>https://statkim.github.io/hyunsungkim/post/2021-01-28-get-assign/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/2021-01-28-get-assign/</guid>
      <description>
&lt;script src=&#34;https://statkim.github.io/hyunsungkim/post/2021-01-28-get-assign/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;&lt;strong&gt;R&lt;/strong&gt;에서 데이터를 다루면서 어쩌면 다음과 같은 경험을 해보신 적이 있으실 겁니다.&lt;/p&gt;
&lt;p&gt;변수명이 &lt;code&gt;weather_Jeju, weather_Seoul, weather_Busan, ...&lt;/code&gt; 으로 되어있고, 우리는 이 데이터에 같은 처리를 해주고 싶습니다.
하지만 각 변수마다 같은 코드를 반복하여 작성하게 되면 코드가 너무 길어지게 되죠. . .&lt;/p&gt;
&lt;p&gt;이런 경우에 변수명을 &lt;strong&gt;문자열 형식&lt;/strong&gt;으로 자유롭게 가져오고 다시 할당해줄 때 사용할 수 있는 &lt;strong&gt;R&lt;/strong&gt; 함수가 있는데, 바로 &lt;code&gt;get()&lt;/code&gt;과 &lt;code&gt;assign()&lt;/code&gt;입니다. 이 두 함수는 R base에 있는 함수로 따로 패키지 설치 없이 사용할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;get---문자열-형식으로-되어있는-변수-불러오기&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;get() - 문자열 형식으로 되어있는 변수 불러오기&lt;/h1&gt;
&lt;p&gt;다음과 같이 3개의 변수가 있다고 가정해봅시다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data_A &amp;lt;- 1:5
data_B &amp;lt;- 11:15
data_C &amp;lt;- 21:25&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;get()&lt;/code&gt; 함수를 사용하는 법은 간단합니다.
다음과 같이 함수 argument로 &lt;strong&gt;“문자열 형태의 변수명”&lt;/strong&gt;을 넣어주면 끝입니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get(&amp;quot;문자열 형태의 변수명&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;즉, &lt;code&gt;data_A&lt;/code&gt;를 가져오는 방법은 다음과 같습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;get(&amp;quot;data_A&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 1 2 3 4 5&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;또는 변수명이 비슷한 형태를 따른다면 &lt;code&gt;paste()&lt;/code&gt; 함수를 활용하여 다음과 같이 반복문에 적용할 수도 있습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;for (i in c(&amp;quot;A&amp;quot;,&amp;quot;B&amp;quot;,&amp;quot;C&amp;quot;)) {
  var_name &amp;lt;- paste(&amp;quot;data_&amp;quot;, i, sep = &amp;quot;&amp;quot;)
  
  print(var_name)
  print(get(var_name))
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;data_A&amp;quot;
## [1] 1 2 3 4 5
## [1] &amp;quot;data_B&amp;quot;
## [1] 11 12 13 14 15
## [1] &amp;quot;data_C&amp;quot;
## [1] 21 22 23 24 25&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;assign---문자열-형식으로-되어있는-변수에-새로운-값-할당하기&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;assign() - 문자열 형식으로 되어있는 변수에 새로운 값 할당하기&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;assign()&lt;/code&gt;은 &lt;code&gt;get()&lt;/code&gt;과 반대로 문자열 형태로 되어있는 변수에 값을 할당할 때 사용할 수 있으며, 2개의 argument가 필요합니다.
첫 번째 argument에는 &lt;strong&gt;“문자열 형태의 변수명”&lt;/strong&gt;, 두 번째 argument에는 &lt;strong&gt;“변수에 넣을 값”&lt;/strong&gt;을 넣어주면 됩니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assign(&amp;quot;문자열 형태의 변수명&amp;quot;, &amp;quot;변수에 넣을 값&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;예를 들어, 새로운 변수 &lt;code&gt;data_D&lt;/code&gt;에 &lt;code&gt;c(1:5)*5&lt;/code&gt; 값을 할당하는 법은 다음과 같습니다.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# data_D &amp;lt;- c(1:5)*5   # 아래와 같은 결과
assign(&amp;quot;data_D&amp;quot;, c(1:5)*5)
print(data_D)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1]  5 10 15 20 25&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Welcome to Wowchemy, the website builder for Hugo</title>
      <link>https://statkim.github.io/hyunsungkim/post/getting-started/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site&lt;/li&gt;
&lt;li&gt;The template can be modified and customised to suit your needs. It&amp;rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a &lt;strong&gt;no-code solution (write in Markdown and customize with YAML parameters)&lt;/strong&gt; and having &lt;strong&gt;flexibility to later add even deeper personalization with HTML and CSS&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more&lt;/li&gt;
&lt;/ol&gt;














&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
&lt;h2 id=&#34;get-started&#34;&gt;Get Started&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Create a new site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;📚 &lt;a href=&#34;https://wowchemy.com/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Personalize your site&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💬 &lt;a href=&#34;https://discord.gg/z8wNYzb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chat with the &lt;strong&gt;Wowchemy community&lt;/strong&gt;&lt;/a&gt; or &lt;a href=&#34;https://discourse.gohugo.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Hugo community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;🐦 Twitter: &lt;a href=&#34;https://twitter.com/wowchemy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@wowchemy&lt;/a&gt; &lt;a href=&#34;https://twitter.com/GeorgeCushen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;@GeorgeCushen&lt;/a&gt; &lt;a href=&#34;https://twitter.com/search?q=%28%23MadeWithWowchemy%20OR%20%23MadeWithAcademic%29&amp;amp;src=typed_query&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#MadeWithWowchemy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;💡 &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Request a &lt;strong&gt;feature&lt;/strong&gt; or report a &lt;strong&gt;bug&lt;/strong&gt; for &lt;em&gt;Wowchemy&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;⬆️ &lt;strong&gt;Updating Wowchemy?&lt;/strong&gt; View the &lt;a href=&#34;https://wowchemy.com/docs/guide/update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Update Guide&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/updates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crowd-funded-open-source-software&#34;&gt;Crowd-funded open-source software&lt;/h2&gt;
&lt;p&gt;To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.&lt;/p&gt;
&lt;h3 id=&#34;-click-here-to-become-a-sponsor-and-help-support-wowchemys-future-httpswowchemycomplans&#34;&gt;&lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;❤️ Click here to become a sponsor and help support Wowchemy&amp;rsquo;s future ❤️&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As a token of appreciation for sponsoring, you can &lt;strong&gt;unlock &lt;a href=&#34;https://wowchemy.com/plans/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;these&lt;/a&gt; awesome rewards and extra features 🦄✨&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ecosystem&#34;&gt;Ecosystem&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/wowchemy/hugo-academic-cli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Academic CLI&lt;/a&gt;:&lt;/strong&gt; Automatically import publications from BibTeX&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;inspiration&#34;&gt;Inspiration&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Check out the latest &lt;strong&gt;demo&lt;/strong&gt;&lt;/a&gt; of what you&amp;rsquo;ll get in less than 10 minutes, or &lt;a href=&#34;https://wowchemy.com/user-stories/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;view the &lt;strong&gt;showcase&lt;/strong&gt;&lt;/a&gt; of personal, project, and business sites.&lt;/p&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Page builder&lt;/strong&gt; - Create &lt;em&gt;anything&lt;/em&gt; with &lt;a href=&#34;https://wowchemy.com/docs/page-builder/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;widgets&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;elements&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Edit any type of content&lt;/strong&gt; - Blog posts, publications, talks, slides, projects, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create content&lt;/strong&gt; in &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Markdown&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&#34;https://wowchemy.com/docs/import/jupyter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;Jupyter&lt;/strong&gt;&lt;/a&gt;, or &lt;a href=&#34;https://wowchemy.com/docs/install-locally/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;RStudio&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Plugin System&lt;/strong&gt; - Fully customizable &lt;a href=&#34;https://wowchemy.com/docs/customization/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;strong&gt;color&lt;/strong&gt; and &lt;strong&gt;font themes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Display Code and Math&lt;/strong&gt; - Code highlighting and &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LaTeX math&lt;/a&gt; supported&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integrations&lt;/strong&gt; - &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Analytics&lt;/a&gt;, &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Disqus commenting&lt;/a&gt;, Maps, Contact Forms, and more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Beautiful Site&lt;/strong&gt; - Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Industry-Leading SEO&lt;/strong&gt; - Help get your website found on search engines and social media&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Media Galleries&lt;/strong&gt; - Display your images and videos with captions in a customizable gallery&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mobile Friendly&lt;/strong&gt; - Look amazing on every screen with a mobile friendly version of your site&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-language&lt;/strong&gt; - 34+ language packs including English, 中文, and Português&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Multi-user&lt;/strong&gt; - Each author gets their own profile page&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Privacy Pack&lt;/strong&gt; - Assists with GDPR&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Stand Out&lt;/strong&gt; - Bring your site to life with animation, parallax backgrounds, and scroll effects&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;One-Click Deployment&lt;/strong&gt; - No servers. No databases. Only files.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;p&gt;Wowchemy and its templates come with &lt;strong&gt;automatic day (light) and night (dark) mode&lt;/strong&gt; built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the &lt;a href=&#34;https://academic-demo.netlify.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Demo&lt;/a&gt; to see it in action! Day/night mode can also be disabled by the site admin in &lt;code&gt;params.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/customization&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Choose a stunning &lt;strong&gt;theme&lt;/strong&gt; and &lt;strong&gt;font&lt;/strong&gt;&lt;/a&gt; for your site. Themes are fully customizable.&lt;/p&gt;
&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;
&lt;p&gt;Copyright 2016-present &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/blob/master/LICENSE.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>https://statkim.github.io/hyunsungkim/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;charts&#34;&gt;Charts&lt;/h3&gt;
&lt;p&gt;Academic supports the popular &lt;a href=&#34;https://plot.ly/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly&lt;/a&gt; chart format.&lt;/p&gt;
&lt;p&gt;Save your Plotly JSON in your page folder, for example &lt;code&gt;chart.json&lt;/code&gt;, and then add the &lt;code&gt;{{&amp;lt; chart data=&amp;quot;chart&amp;quot; &amp;gt;}}&lt;/code&gt; shortcode where you would like the chart to appear.&lt;/p&gt;
&lt;p&gt;Demo:&lt;/p&gt;


&lt;div id=&#34;chart-478196235&#34; class=&#34;chart&#34;&gt;&lt;/div&gt;
&lt;script&gt;
  (function() {
    let a = setInterval( function() {
      if ( typeof window.Plotly === &#39;undefined&#39; ) {
        return;
      }
      clearInterval( a );

      Plotly.d3.json(&#34;./line-chart.json&#34;, function(chart) {
        Plotly.plot(&#39;chart-478196235&#39;, chart.data, chart.layout, {responsive: true});
      });
    }, 500 );
  })();
&lt;/script&gt;
&lt;p&gt;You might also find the &lt;a href=&#34;http://plotly-json-editor.getforge.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Plotly JSON Editor&lt;/a&gt; useful.&lt;/p&gt;
&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$...$&lt;/code&gt; or &lt;code&gt;$$...$$&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;$$\gamma_{n} = \frac{ 
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T 
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left |\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right |^2}$$&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$\nabla F(\mathbf{x}_{n})$&lt;/code&gt; renders as $\nabla F(\mathbf{x}_{n})$.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\\\&lt;/code&gt; math linebreak:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;$$f(k;p_{0}^{*}) = \begin{cases}p_{0}^{*} &amp;amp; \text{if }k=1, \\\\
1-p_{0}^{*} &amp;amp; \text{if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$f(k;p_{0}^{*}) = \begin{cases}p_{0}^{*} &amp;amp; \text{if }k=1, \\&lt;br&gt;
1-p_{0}^{*} &amp;amp; \text{if }k=0.\end{cases}$$&lt;/p&gt;
&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;
&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;class diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;state diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;
&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write math example&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Do something else&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;
&lt;p&gt;Represent your data in tables:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;callouts&#34;&gt;Callouts&lt;/h3&gt;
&lt;p&gt;Academic supports a &lt;a href=&#34;https://wowchemy.com/docs/content/writing-markdown-latex/#callouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcode for callouts&lt;/a&gt;, also referred to as &lt;em&gt;asides&lt;/em&gt;, &lt;em&gt;hints&lt;/em&gt;, or &lt;em&gt;alerts&lt;/em&gt;. By wrapping a paragraph in &lt;code&gt;{{% callout note %}} ... {{% /callout %}}&lt;/code&gt;, it will render as an aside.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% callout note %}}
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
{{% /callout %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;spoilers&#34;&gt;Spoilers&lt;/h3&gt;
&lt;p&gt;Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; spoiler text=&amp;quot;Click to view the spoiler&amp;quot; &amp;gt;}}
You found me!
{{&amp;lt; /spoiler &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;details class=&#34;spoiler &#34;  id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;Click to view the spoiler&lt;/summary&gt;
  &lt;p&gt;You found me!&lt;/p&gt;
&lt;/details&gt;
&lt;h3 id=&#34;icons&#34;&gt;Icons&lt;/h3&gt;
&lt;p&gt;Academic enables you to use a wide range of &lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons from &lt;em&gt;Font Awesome&lt;/em&gt; and &lt;em&gt;Academicons&lt;/em&gt;&lt;/a&gt; in addition to &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;emojis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some examples using the &lt;code&gt;icon&lt;/code&gt; shortcode to render icons:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; icon name=&amp;quot;terminal&amp;quot; pack=&amp;quot;fas&amp;quot; &amp;gt;}} Terminal  
{{&amp;lt; icon name=&amp;quot;python&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} Python  
{{&amp;lt; icon name=&amp;quot;r-project&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} R
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-terminal  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Terminal&lt;br&gt;

  &lt;i class=&#34;fab fa-python  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Python&lt;br&gt;

  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; R&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Display Jupyter Notebooks with Academic</title>
      <link>https://statkim.github.io/hyunsungkim/post/jupyter/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/jupyter/</guid>
      <description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from IPython.core.display import Image
Image(&#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;./index_1_0.png&#34; alt=&#34;png&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;print(&amp;quot;Welcome to Academic!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Welcome to Academic!
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install-python-and-jupyterlab&#34;&gt;Install Python and JupyterLab&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.anaconda.com/distribution/#download-section&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Install Anaconda&lt;/a&gt; which includes Python 3 and JupyterLab.&lt;/p&gt;
&lt;p&gt;Alternatively, install JupyterLab with &lt;code&gt;pip3 install jupyterlab&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-or-upload-a-jupyter-notebook&#34;&gt;Create or upload a Jupyter notebook&lt;/h2&gt;
&lt;p&gt;Run the following commands in your Terminal, substituting &lt;code&gt;&amp;lt;MY-WEBSITE-FOLDER&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;SHORT-POST-TITLE&amp;gt;&lt;/code&gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
cd &amp;lt;MY-WEBSITE-FOLDER&amp;gt;/content/post/&amp;lt;SHORT-POST-TITLE&amp;gt;/
jupyter lab index.ipynb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;jupyter&lt;/code&gt; command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.&lt;/p&gt;
&lt;h2 id=&#34;edit-your-post-metadata&#34;&gt;Edit your post metadata&lt;/h2&gt;
&lt;p&gt;The first cell of your Jupter notebook will contain your post metadata (&lt;a href=&#34;https://sourcethemes.com/academic/docs/front-matter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;front matter&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In Jupter, choose &lt;em&gt;Markdown&lt;/em&gt; as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: My post&#39;s title
date: 2019-09-01

# Put any other Academic metadata here...
---
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Edit the metadata of your post, using the &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;documentation&lt;/a&gt; as a guide to the available options.&lt;/p&gt;
&lt;p&gt;To set a &lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#featured-image&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;featured image&lt;/a&gt;, place an image named &lt;code&gt;featured&lt;/code&gt; into your post&amp;rsquo;s folder.&lt;/p&gt;
&lt;p&gt;For other tips, such as using math, see the guide on &lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;writing content with Academic&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;convert-notebook-to-markdown&#34;&gt;Convert notebook to Markdown&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;This post was created with Jupyter. The orginal files can be found at &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python 가상환경 만들기</title>
      <link>https://statkim.github.io/hyunsungkim/post/2018-11-01-virtual-env/</link>
      <pubDate>Thu, 01 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://statkim.github.io/hyunsungkim/post/2018-11-01-virtual-env/</guid>
      <description>&lt;h4 id=&#34;가상환경을-사용하는-이유&#34;&gt;가상환경을 사용하는 이유&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;여러 사람과 협업 또는 만들어 놓은 코드를 분석할 때 각 프로젝트마다 파이썬, 라이브러리 버전이 다름&lt;/li&gt;
&lt;li&gt;이로 인해 기존 로컬에 영향이 가지 않는 별개의 가상환경을 만들고 그 안에서만 사용할 패키지를 설치하여 사용!!&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;1-conda를-사용하여-가상환경-만들기&#34;&gt;1. conda를 사용하여 가상환경 만들기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경-생성&#34;&gt;가상환경 생성&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 아나콘다 버전 확인
conda --version

# 아나콘다 업데이트
conda update conda

# 아나콘다 가상환경 생성
conda create --name 가상환경이름 파이썬버전
# 예) 파이썬 3.6.4 버전 설치 &amp;amp; 가상환경 이름은 test
conda create --name test python=3.6.4
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경-활성화-및-비활성화&#34;&gt;가상환경 활성화 및 비활성화&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 설치된 가상환경 리스트 확인
conda info --envs

# 가상환경 활성화
activate 가상환경이름

# 가상환경 비활성화
deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경-패키지-설치-및-확인-가상환경-activate된-상태에서-실행&#34;&gt;가상환경 패키지 설치 및 확인 (가상환경 activate된 상태에서 실행)&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 가상환경에 설치된 package 확인
pip list
# or
conda list

# pip upgrade
python -m pip install --upgrade pip

# 필요한 library 한번에 설치
pip install -r requirements.txt

# 위 방법으로 안될 때는 아래에 있는 방법 사용해볼것!!
# conda를 이용해서 package 설치
conda install 패키지명
# conda를 이용해서 한 번에 설치
conda install --file requirements.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경-삭제-root-계정으로-activate-후-삭제하는-것을-추천&#34;&gt;가상환경 삭제 (root 계정으로 activate 후 삭제하는 것을 추천)&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 가상환경 삭제
conda remove --name 가상환경이름 --all
# 예)
conda remove --name test --all

# 가상환경 삭제되었는지 확인
conda info --envs
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2 id=&#34;2-virtualenv를-사용하여-가상환경-만들기&#34;&gt;2. Virtualenv를 사용하여 가상환경 만들기&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;virtualenv-설치&#34;&gt;virtualenv 설치&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;pip install virtualenv	
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경-만들기&#34;&gt;가상환경 만들기&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;현재 경로에 가상환경 폴더 생성됨&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 가상환경 폴더 생성할 경로로 이동
cd 경로

# 가상환경 생성
virtualenv 가상환경이름	
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경-활성화-및-패키지--설치&#34;&gt;가상환경 활성화 및 패키지  설치&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 가상환경 활성화
call 경로/Script/activate
# 활성화되면 terminal 왼쪽에 (가상환경이름)이 생긴다!!

# 가상환경에 설치된 package 확인
pip list

# 필요한 library 한번에 설치
# (requirements.txt에 필요 library 목록이 있음)
# 가상환경 활성화된 상태에서!!
pip install -r requirements.txt

# 가상환경 비활성화
deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경-삭제&#34;&gt;가상환경 삭제&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;가상환경 폴더를 삭제하면 됨!!!&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;rm -rf 경로/가상환경이름 (리눅스)
rmdir /s 경로/가상환경이름 (cmd - /s:하위 모든 파일 삭제)
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3 id=&#34;3-jupyter-notebook에서-가상환경-사용하기&#34;&gt;3. Jupyter notebook에서 가상환경 사용하기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h5 id=&#34;가상환경에-새로운-kernel-만들기&#34;&gt;가상환경에 새로운 kernel 만들기&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;kernel 생성 경로 : &lt;code&gt;C:\Users\window계정명\AppData\Roaming\jupyter\kernels&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 가상환경 활성화
activate &amp;lt;가상환경이름&amp;gt;

# 가상환경에 ipykernel을 설치!!
pip install ipykernel

# jupyter notebook에서 가상환경(kernel)을 선택할 수 있게 만듬
python -m ipykernel install --user --name 가상환경이름 --display-name &amp;quot;&amp;lt;kernel에 표현할 이름&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;jupyter에-추가된-kernel-삭제하기&#34;&gt;jupyter에 추가된 kernel 삭제하기&lt;/h5&gt;
&lt;pre&gt;&lt;code class=&#34;language-cmd&#34;&gt;# 가상환경을 파이썬3로 만들기(만약 현재 파이썬 버전이 2.xx일 떄)
virtualenv -p python3 &amp;lt;가상환경이름&amp;gt;

# 현재 가지고 있는 kernel 종류
jupyter kernelspec list

# 생성한 kernel 지우는 방법
jupyter kernelspec remove &amp;lt;지우고 싶은 kernel명&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3 id=&#34;4-pycharm에서-가상환경-사용하기&#34;&gt;4. Pycharm에서 가상환경 사용하기&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;File&lt;/code&gt; -&amp;gt; &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Project&lt;/code&gt; -&amp;gt; &lt;code&gt;Project Interpreter&lt;/code&gt; -&amp;gt; &lt;code&gt;+&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 해당되는 가상환경 선택 (ex - &lt;code&gt;conda&lt;/code&gt; or &lt;code&gt;virtualenv&lt;/code&gt; 등)&lt;/p&gt;
&lt;p&gt;-&amp;gt; &lt;code&gt;Existing environment&lt;/code&gt; 탭 클릭!!  -&amp;gt; &lt;code&gt;Interpreter&lt;/code&gt; 옆의 &lt;code&gt;...&lt;/code&gt; 클릭&lt;/p&gt;
&lt;p&gt;-&amp;gt; 가상환경 폴더 내에 있는 &lt;code&gt;python.exe&lt;/code&gt; 경로 선택 (ex - &lt;code&gt;C:/Anaconda/envs/가상환경이름/python.exe&lt;/code&gt;)&lt;/p&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://niceman.tistory.com/85&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://niceman.tistory.com/85&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
