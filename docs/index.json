[{"authors":null,"categories":null,"content":"I am a Ph.D. candidate in the Department of Statistics at Seoul National University, under the supervision of Prof. Junyong Park. I am also a member of High Dimensional Multiple Testing Lab. Prior to that, I received my M.A. in Statistics and B.A. in Applied Statistics at Chung-Ang University under the supervision of Prof. Yaeji Lim.\nMy research interests include Functional Data Analysis, High-Dimensional Data Analysis, and Multiple Testing.\nI love R coding and making documents using Rmarkdown. I sometimes write on my personal blog about Statistics, R, etc.\n  Download my CV.  Contact me : hyunsung1021@gmail.com\n","date":1743811200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1743811200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://statkim.github.io/hyunsungkim/author/hyunsung-kim/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/hyunsungkim/author/hyunsung-kim/","section":"authors","summary":"I am a Ph.D. candidate in the Department of Statistics at Seoul National University, under the supervision of Prof. Junyong Park. I am also a member of High Dimensional Multiple Testing Lab.","tags":null,"title":"Hyunsung Kim","type":"authors"},{"authors":null,"categories":null,"content":"   Table of Contents  What you will learn Program overview Courses in this program Meet your instructor FAQs    What you will learn  Fundamental Python programming skills Statistical concepts and how to apply them in practice Gain experience with the Scikit, including data visualization with Plotly and data wrangling with Pandas  Program overview The demand for skilled data science practitioners is rapidly growing. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi.\nCourses in this program  Python basics Build a foundation in Python.   Visualization Learn how to visualize data with Plotly.   Statistics Introduction to statistics for data science.   Meet your instructor Hyunsung Kim FAQs Are there prerequisites? There are no prerequisites for the first course.\n How often do the courses run? Continuously, at your own pace.\n  Begin the course   ","date":1611446400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1611446400,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://statkim.github.io/hyunsungkim/courses/example/","publishdate":"2021-01-24T00:00:00Z","relpermalink":"/hyunsungkim/courses/example/","section":"courses","summary":"An example of using Wowchemy's Book layout for publishing online courses.","tags":null,"title":"📊 Learn Data Science","type":"book"},{"authors":null,"categories":null,"content":"Build a foundation in Python.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz What is the difference between lists and tuples? Lists\n Lists are mutable - they can be changed Slower than tuples Syntax: a_list = [1, 2.0, 'Hello world']  Tuples\n Tuples are immutable - they can\u0026rsquo;t be changed Tuples are faster than lists Syntax: a_tuple = (1, 2.0, 'Hello world')   Is Python case-sensitive? Yes\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"17a31b92253d299002593b7491eedeea","permalink":"https://statkim.github.io/hyunsungkim/courses/example/python/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/hyunsungkim/courses/example/python/","section":"courses","summary":"Build a foundation in Python.\n","tags":null,"title":"Python basics","type":"book"},{"authors":null,"categories":null,"content":"Learn how to visualize data with Plotly.\n  1-2 hours per week, for 8 weeks\nLearn   Quiz When is a heatmap useful? Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n Write Plotly code to render a bar chart import plotly.express as px data_canada = px.data.gapminder().query(\u0026quot;country == 'Canada'\u0026quot;) fig = px.bar(data_canada, x='year', y='pop') fig.show()  ","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"1b341b3479c8c6b1f807553b77e21b7c","permalink":"https://statkim.github.io/hyunsungkim/courses/example/visualization/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/hyunsungkim/courses/example/visualization/","section":"courses","summary":"Learn how to visualize data with Plotly.\n","tags":null,"title":"Visualization","type":"book"},{"authors":null,"categories":null,"content":"Introduction to statistics for data science.\n  1-2 hours per week, for 8 weeks\nLearn The general form of the normal probability density function is:\n$$ f(x) = \\frac{1}{\\sigma \\sqrt{2\\pi} } e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} $$\n The parameter $\\mu$ is the mean or expectation of the distribution. $\\sigma$ is its standard deviation. The variance of the distribution is $\\sigma^{2}$.   Quiz What is the parameter $\\mu$? The parameter $\\mu$ is the mean or expectation of the distribution.\n","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1609459200,"objectID":"6f4078728d71b1b791d39f218bf2bdb1","permalink":"https://statkim.github.io/hyunsungkim/courses/example/stats/","publishdate":"2021-01-01T00:00:00Z","relpermalink":"/hyunsungkim/courses/example/stats/","section":"courses","summary":"Introduction to statistics for data science.\n","tags":null,"title":"Statistics","type":"book"},{"authors":["Hyunsung Kim","Junyong Park"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1743811200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1743811200,"objectID":"8f099dab734b06de9957df379bdd618e","permalink":"https://statkim.github.io/hyunsungkim/publication/2025-foutlier_cp/","publishdate":"2025-04-05T00:00:00Z","relpermalink":"/hyunsungkim/publication/2025-foutlier_cp/","section":"publication","summary":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","tags":null,"title":"Conformal Outlier Detection for Multivariate Functional Data","type":"publication"},{"authors":["Yeji Seong","Iris Ivy Gauran","Hyunsung Kim","Hernando Ombao","Junyong Park"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1730764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1730764800,"objectID":"52c933d3740d8a99ba85e655408d0ce4","permalink":"https://statkim.github.io/hyunsungkim/publication/2024-fmri_classification/","publishdate":"2024-11-05T00:00:00Z","relpermalink":"/hyunsungkim/publication/2024-fmri_classification/","section":"publication","summary":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","tags":null,"title":"Classification of Multivariate Functional Data with an application to ADHD fMRI Data","type":"publication"},{"authors":["Eun Jee Park","Hyunsung Kim","Yaeji Lim","Soon Young Lee","Weon-Young Lee"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1707782400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1707782400,"objectID":"d55a1d1d2eaff1425f69476a97cc3892","permalink":"https://statkim.github.io/hyunsungkim/publication/2019-godang/","publishdate":"2021-12-20T00:00:00Z","relpermalink":"/hyunsungkim/publication/2019-godang/","section":"publication","summary":"Effective chronic disease management requires the active participation of patients, communities, and physicians. The objective of this study was to estimate the effectiveness of the Community-based Registration and Management for elderly patients with Hypertension or Type 2 Diabetes mellitus Project (CRMHDP) by using motivated primary care physicians and patients supported by prepared communities, to utilise healthcare and health outcomes in four cities in South Korea. We conducted a propensity score-matched retrospective cohort study using 2010–2011 as the baseline years, alongside a follow-up period until 2015/2016, based on the Korean National Health Insurance database. Both a CRMHDP group (n = 46,865) and a control group (n = 93,730) were applied against healthcare utilisation and difference-in-differences estimations were performed. For the health outcome analysis, the intervention group (n = 27,242) and control group (n = 54,484) were analysed using the Kaplan–Meier method and Cox proportional hazard regression. **Results:** The difference-in-differences estimation of the average annual clinic visits per person and the average annual days covered were 1.26 (95% confidence interval, 1.13–1.39) and 22.97 (95% CI, 20.91–25.03), respectively, between the intervention and control groups. The adjusted hazard ratio for death in the intervention group, compared to the control group, was 0.90 (95% CI, 0.86–0.93). For stroke and chronic renal failure, the adjusted hazard ratios for the intervention group compared to the control group were 0.94 (95% CI, 0.88–0.99) and 0.80 (95% CI 0.73–0.89), respectively. Our study suggests that for effective chronic disease management both elderly patients and physicians need to be motivated by community support.","tags":null,"title":"Effect of motivated physicians and elderly patients with hypertension or type 2 diabetes mellitus in prepared communities on health behaviours and outcomes: A population-based PS matched retrospective cohort study during five-year follow-up period","type":"publication"},{"authors":["Ji Young Park","Young June Choe","Yaeji Lim","Hyunsung Kim","Jaehyun Kim"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1703980800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1703980800,"objectID":"684c3dbd6d8a1d6974136e8c45b064e9","permalink":"https://statkim.github.io/hyunsungkim/publication/2021-cau-hospital/","publishdate":"2021-12-20T00:00:00Z","relpermalink":"/hyunsungkim/publication/2021-cau-hospital/","section":"publication","summary":"Purpose The correlation between the incidence of type 1 diabetes mellitus (T1DM) and tuberculosis or bacillus Calmette-Guérin (BCG) vaccination rate in individuals aged Methods  The incidence of T1DM, rate of BCG vaccination, and incidence of tuberculosis were obtained from the Diabetes Atlas 9th edition of the International Diabetes Federation and the Global Health Observatory data repository of the World Health Organization. Gross domestic product (GDP) per capita and population data by country were obtained from the World Bank and United Nations, respectively.  Results  GDP per capita negatively correlated with the incidence of tuberculosis and positively correlated with the incidence of T1DM (coefficient=-0.630 and 0.596, respectively; all PConclusions  There was a negative correlation between the incidence of tuberculosis and T1DM in children and adolescents aged ","tags":["Association","Type 1 diabetes mellitus","Mycobacterium bovis","Tuberculosis"],"title":"Association between the incidence of type 1 diabetes mellitus and tuberculosis or bacillus Calmette-Guérin immunization in children and adolescents","type":"publication"},{"authors":["Hyunsung Kim","Yaeji Lim"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1701388800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1701388800,"objectID":"f996e5a49812b38d9f892dfd3444e814","permalink":"https://statkim.github.io/hyunsungkim/publication/2022-kcrfc/","publishdate":"2022-10-14T00:00:00Z","relpermalink":"/hyunsungkim/publication/2022-kcrfc/","section":"publication","summary":"We propose the functional clustering algorithm applicable to the sphere-valued random curves, called k-centres Riemannian functional clustering (kCRFC). It is based on Riemannian functional principal component scores and k-centres functional clustering algorithm, thus we can obtain accurate clustering results by reflecting the geometry of the sphere. Our method shows better clustering performances than existing multivariate functional clustering methods in various simulation settings. We apply the proposed method to the migration trajectories of Egyptian Vultures in the Middle East and East Africa, and fruit fly behaviors, containing the curves lied on two dimensional and three dimensional sphere, respectively.","tags":["Sphere-valued functional data","Functional clustering","Riemannian functional principal component analysis","k-centres functional clustering"],"title":"Functional clustering on a sphere via Riemannian functional principal components","type":"publication"},{"authors":["Yeonjoo Park","Hyunsung Kim","Yaeji Lim"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1690848000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1690848000,"objectID":"5fd3b4f42ad50a2649951f45591f8048","permalink":"https://statkim.github.io/hyunsungkim/publication/2022-partial_obs/","publishdate":"2022-05-26T00:00:00Z","relpermalink":"/hyunsungkim/publication/2022-partial_obs/","section":"publication","summary":"We present the robust estimators of principal components for partially observed functional data with heavy-tail behaviors, where sample trajectories are collected over individual-specific subinterval(s). We introduce the elliptical stochastic process to model non-Gaussian functional behaviors, formulate the partially sampled trajectories using the partial observation process, and propose implementing the robust functional principal component analysis under this framework. The proposed method is computationally efficient and straightforward by estimating the robust correlation function based on the pairwise covariance computation, combined with M-estimation. The asymptotic consistency of the estimators is established under general conditions. The superior performance of our method in the approximation of subspace of the data and reconstruction of full trajectories is demonstrated in simulation studies. We also apply the proposed method to hourly monitored air pollutant data, containing anomaly trajectories with random missing segments.","tags":["Functional data","Partially observed data","Elliptical process","Robust functional principal component analysis"],"title":"Functional principal component analysis for partially observed elliptical process","type":"publication"},{"authors":["Hyunsung Kim"],"categories":["R"],"content":"  License 추가하기 패키지의 License는 다음의 함수를 사용하여 생성할 수 있습니다. 여기서는 흔하게 사용하는 MIT License를 사용해보겠습니다.\nusethis::use_mit_license() ✓ Setting License field in DESCRIPTION to \u0026#39;MIT + file LICENSE\u0026#39; ✓ Writing \u0026#39;LICENSE\u0026#39; ✓ Writing \u0026#39;LICENSE.md\u0026#39; ✓ Adding \u0026#39;^LICENSE\\\\.md$\u0026#39; to \u0026#39;.Rbuildignore\u0026#39;  R 함수 추가하기 이제 R package에 포함하고자 하는 함수를 생성해보겠습니다. 우선 다음의 코드로 R/my_Rfunction.R 파일을 생성할 수 있습니다.\nusethis::use_r(\u0026quot;my_Rfunction\u0026quot;) ✓ Setting active project to \u0026#39;/Users/hyunsung/Desktop/Rproject/fda.manifold\u0026#39; • Modify \u0026#39;R/my_Rfunction.R\u0026#39; • Call `use_test()` to create a matching test file 이제 R/my_Rfunction.R 파일을 열어서 다음의 내용을 입력해줍니다. 벡터를 받아와서 결측값을 제외하여 합하는 add()라는 함수를 만들었는데요. 패키지를 만들 때에 주의할 점으로 base 함수가 아닌 다른 패키지에 포함되어 있는 함수를 사용할 경우에는 패키지명::함수와 같은 방식으로 사용해야만 합니다. 여기서는 stats 패키지에 있는 na.omit() 함수를 사용하기 위해 stats::na.omit()과 같이 입력해주었습니다. 물론 패키지 이름을 생략하여 사용할 수 있는 방법이 있긴 하지만, 그보다는 작업시 다른 패키지 안의 같은 이름을 가진 함수끼리의 충돌을 방지하는 차원에서 이러한 방식을 추천드립니다.\n#\u0026#39; 함수 이름 (Title) #\u0026#39; #\u0026#39; 함수 설명 (Description) #\u0026#39; 여러 줄로도 적을 수 있음 #\u0026#39; #\u0026#39; @param x 함수의 input parameter #\u0026#39; @export add \u0026lt;- function(x) { sum(stats::na.omit(x)) } #'로 시작되는 부분은 함수의 설명을 적어주는 부분인데요. (이는 roxygen2라는 패키지를 통해 변환해줍니다.) 첫 번째 줄에는 함수의 이름(Title), 두 번째 문단에는 함수의 설명(Description)을 입력해주면 됩니다. @param은 함수읠 input parameter(Arguments)와 그에 대한 설명을 적어주고, @export는 이 함수를 패키지에 속해있는 함수로 사용하겠다라는 의미입니다.\n다음의 코드로 위에서 생성한 함수의 manual를 생성해주게 되고, man 폴더가 생성되고 그 안에 add.Rd라는 manual 파일이 생성되게 됩니다.\ndevtools::document() ℹ Updating fda.manifold documentation ℹ Loading fda.manifold Writing NAMESPACE Writing NAMESPACE Writing fda.manifold-package.Rd Writing add.Rd 다음과 같이 함수의 설명을 확인해보면, 우리가 입력해준 내용이 나타나는 것을 확인할 수 있습니다.\n?add  패키지 check 이제 R CMD check를 통해 이 패키지가 정상적으로 사용될 수 있는지에 대한 확인을 해주어야 하는데요. 이는 Rstudio에서 Build 탭에 Check 버튼을 눌러주거나\n아래의 함수를 사용해주면 됩니다.\ndevtools::check() 아래와 같이 아무런 errors나 warnings, notes가 나타나지 않으면 현재 패키지 작동에 문제가 없다는 것을 의미합니다. 만약 이 과정에서 문제가 있다는 메시지가 있을 경우, 내용을 보고 함수나 다른 설정을 수정해준 후에 다시 R CMD check를 해주면 됩니다.\n0 errors ✓ | 0 warnings ✓ | 0 notes ✓ R CMD check succeeded \n Reference  https://r-pkgs.org/whole-game.html http://www.danieldsjoberg.com/writing-R-packages/   ","date":1658016000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1658016000,"objectID":"775f28e9dd46ca32f686cd9ca9b29136","permalink":"https://statkim.github.io/hyunsungkim/post/2022-07-17-rpackage-2/","publishdate":"2022-07-17T00:00:00Z","relpermalink":"/hyunsungkim/post/2022-07-17-rpackage-2/","section":"post","summary":"License 추가하기 패키지의 License는 다음의 함수를 사용하여 생성할 수 있습니다. 여기서는 흔하게 사용하는 MIT License를 사용해보겠습니다.\nusethis::use_mit_license() ✓ Setting License field in DESCRIPTION to \u0026#39;MIT + file LICENSE\u0026#39; ✓ Writing \u0026#39;LICENSE\u0026#39; ✓ Writing \u0026#39;LICENSE.","tags":["R package","R","GitHub"],"title":"R package 만들기 2","type":"post"},{"authors":["Hyunsung Kim"],"categories":["R"],"content":"  오늘부터 R package를 만들어서 GitHub을 통해 배포할 수 있는 방법에 대해 정리해보려 합니다. 이 방법은 cran 대신, 개인 GitHub에 업로드하여 패키지를 다운 및 사용할 수 있는 방법입니다. (아래 예시 코드에서 두번째 방식으로 패키지를 다운받는 방법입니다.)\n# cran에 있는 패키지 설치 install.package(\u0026quot;패키지명\u0026quot;) # GitHub에 있는 패키지 설치 devtools::install_github(\u0026quot;statKim/패키지명\u0026quot;) 그럼, 패키지를 만들고 GitHub에 업로드하는 것으로 먼저 시작해보죠!\n패키지 만들기 먼저 RStudio를 실행하고, usethis라는 패키지를 먼저 설치해줍니다. usethis에는 R 패키지 개발에 있어 여러 유용한 함수들이 들어있고, 이는 공식 홈페이지인 https://usethis.r-lib.org/ 에서 확인할 수 있습니다. (웬만한 R 패키지 세팅에 대한 기능은 대부분 포함되어 있기 떄문에, 패키지에 포함할 함수 코드부분을 제외한 설정에 있어서는 되도록 usethis 패키지에 내장된 함수를 사용하기를 권장합니다!)\ninstall.packages(\u0026quot;usethis\u0026quot;)  usethis 패키지 안의 usethis::create_package()라는 함수를 이용하여 패키지를 생성할 수 있는데요. 다음과 같이 함수 인자로 Rproject_저장경로/패키지_이름을 넣어주면 됩니다. (여기서는 fda.manifold라는 패키지를 만들어보겠습니다.)\nusethis::create_package(\u0026quot;~/Desktop/Rproject/fda.manifold\u0026quot;) ✓ Creating \u0026#39;/Users/hyunsung/Desktop/Rproject/fda.manifold/\u0026#39; ✓ Setting active project to \u0026#39;/Users/hyunsung/Desktop/Rproject/fda.manifold\u0026#39; ✓ Creating \u0026#39;R/\u0026#39; ✓ Writing \u0026#39;DESCRIPTION\u0026#39; Package: fda.manifold Title: What the Package Does (One Line, Title Case) Version: 0.0.0.9000 Authors@R (parsed): * First Last \u0026lt;first.last@example.com\u0026gt; [aut, cre] (YOUR-ORCID-ID) Description: What the package does (one paragraph). License: `use_mit_license()`, `use_gpl3_license()` or friends to pick a license Encoding: UTF-8 LazyData: true Roxygen: list(markdown = TRUE) RoxygenNote: 7.1.2 ✓ Writing \u0026#39;NAMESPACE\u0026#39; ✓ Writing \u0026#39;fda.manifold.Rproj\u0026#39; ✓ Adding \u0026#39;^fda\\\\.manifold\\\\.Rproj$\u0026#39; to \u0026#39;.Rbuildignore\u0026#39; ✓ Adding \u0026#39;.Rproj.user\u0026#39; to \u0026#39;.gitignore\u0026#39; ✓ Adding \u0026#39;^\\\\.Rproj\\\\.user$\u0026#39; to \u0026#39;.Rbuildignore\u0026#39; ✓ Opening \u0026#39;/Users/hyunsung/Desktop/Rproject/fda.manifold/\u0026#39; in new RStudio session ✓ Setting active project to \u0026#39;\u0026lt;no active project\u0026gt;\u0026#39; 그럼 위의 결과가 나오면서 새로운 RStudio 창이 열리게 되고, 아래의 그림의 구조를 가지는 Rproject가 생성되게 됩니다.\n 패키지 document 생성 usethis::use_package_doc() ✓ Setting active project to \u0026#39;/Users/hyunsung/Desktop/Rproject/fda.manifold\u0026#39; ✓ Writing \u0026#39;R/fda.manifold-package.R\u0026#39; • Modify \u0026#39;R/fda.manifold-package.R\u0026#39;  git 사용 GitHub에 패키지를 업로드하기 위해서, git을 사용하도록 설정해주어야 하는데요. 다음의 코드를 입력하여 현재 Rproject를 git 폴더형태로 만들 수 있습니다.\nusethis::use_git() ✓ Initialising Git repo ✓ Adding \u0026#39;.Rhistory\u0026#39;, \u0026#39;.Rdata\u0026#39;, \u0026#39;.httr-oauth\u0026#39;, \u0026#39;.DS_Store\u0026#39; to \u0026#39;.gitignore\u0026#39; There are 6 uncommitted files: * \u0026#39;.gitignore\u0026#39; * \u0026#39;.Rbuildignore\u0026#39; * \u0026#39;DESCRIPTION\u0026#39; * \u0026#39;fda.manifold.Rproj\u0026#39; * \u0026#39;NAMESPACE\u0026#39; * \u0026#39;R/\u0026#39; Is it ok to commit them? 1: Negative 2: No way 3: Yeah Selection: 3 ✓ Adding files ✓ Making a commit with message \u0026#39;Initial commit\u0026#39; • A restart of RStudio is required to activate the Git pane Restart now? 1: Absolutely not 2: No 3: Definitely Selection: 3  GitHub 연결 및 repository 생성  이 부분은 기존에 RStudio를 본인의 GitHub 계정과 연결되어 있는 경우에 가능합니다!\n 로컬에서 git 폴더를 만들었으니, 이제 GitHub 원격저장소에 올리면 끝입니다! 다음의 코드를 실행하면, 자동으로 본인의 GitHub에 패키지 이름으로 repository를 생성해주고 push까지 해주게 됩니다.\nusethis::use_github() ℹ Defaulting to \u0026#39;https\u0026#39; Git protocol ✓ Setting active project to \u0026#39;/Users/hyunsung/Desktop/Rproject/fda.manifold\u0026#39; ✓ Checking that current branch is default branch (\u0026#39;master\u0026#39;) ✓ Creating GitHub repository \u0026#39;statKim/fda.manifold\u0026#39; ✓ Setting remote \u0026#39;origin\u0026#39; to \u0026#39;https://github.com/statKim/fda.manifold.git\u0026#39; ✓ Setting URL field in DESCRIPTION to \u0026#39;https://github.com/statKim/fda.manifold\u0026#39; ✓ Setting BugReports field in DESCRIPTION to \u0026#39;https://github.com/statKim/fda.manifold/issues\u0026#39; There is 1 uncommitted file: * \u0026#39;DESCRIPTION\u0026#39; Is it ok to commit it? 1: For sure 2: Absolutely not 3: Not now Selection: 1 ✓ Adding files ✓ Making a commit with message \u0026#39;Add GitHub links to DESCRIPTION\u0026#39; ✓ Pushing \u0026#39;master\u0026#39; branch to GitHub and setting \u0026#39;origin/master\u0026#39; as upstream branch ✓ Opening URL \u0026#39;https://github.com/statKim/fda.manifold\u0026#39; 그리고 자동으로 창 하나가 열리면서 다음의 GitHub repository에 잘 업로드되어 있는 것을 확인할 수 있습니다.\n\n Reference  https://r-pkgs.org/whole-game.html http://www.danieldsjoberg.com/writing-R-packages/   ","date":1656892800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656892800,"objectID":"cc3f01c66233a6612d750828abf9535a","permalink":"https://statkim.github.io/hyunsungkim/post/2022-07-04-rpackage-1/","publishdate":"2022-07-04T00:00:00Z","relpermalink":"/hyunsungkim/post/2022-07-04-rpackage-1/","section":"post","summary":"오늘부터 R package를 만들어서 GitHub을 통해 배포할 수 있는 방법에 대해 정리해보려 합니다. 이 방법은 cran 대신, 개인 GitHub에 업로드하여 패키지를 다운 및 사용할 수 있는 방법입니다. (아래 예시 코드에서 두번째 방식으로 패키지를 다운받는 방법입니다.","tags":["R package","R","GitHub"],"title":"R package 만들기 1","type":"post"},{"authors":["Hyunsung Kim"],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways: - **Create** slides using Wowchemy's [*Slides*](https://wowchemy.com/docs/managing-content/#create-slides) feature and link using `slides` parameter in the front matter of the talk file - **Upload** an existing slide deck to `static/` and link using `url_slides` parameter in the front matter of the talk file - **Embed** your slides (e.g. Google Slides) or presentation video on this page using [shortcodes](https://wowchemy.com/docs/writing-markdown-latex/). Further event details, including [page elements](https://wowchemy.com/docs/writing-markdown-latex/) such as image galleries, can be added to the body of this page. -- ","date":1656077400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656077400,"objectID":"b9bf16d9b43120eb0f53682059c981c1","permalink":"https://statkim.github.io/hyunsungkim/talk/functional-principal-component-analysis-for-partially-observed-elliptical-process/","publishdate":"2022-06-11T00:00:00Z","relpermalink":"/hyunsungkim/talk/functional-principal-component-analysis-for-partially-observed-elliptical-process/","section":"event","summary":"The Korean Statistical Society Summer Conference","tags":["functional data","partially observed data","elliptical process","robust functional principal component analysis"],"title":"Functional principal component analysis for partially observed elliptical process","type":"event"},{"authors":["Hyunsung Kim","Yaeji Lim"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1652140800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1652140800,"objectID":"e17ad48a8c8e63461e552bb7ee297ced","permalink":"https://statkim.github.io/hyunsungkim/publication/2020-jas_bagfpca/","publishdate":"2022-05-10T00:00:00Z","relpermalink":"/hyunsungkim/publication/2020-jas_bagfpca/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Functional data","functional principal component analysis","bootstrap aggregating","classification","sparse data"],"title":"Bootstrap aggregated classification for sparse functional data","type":"publication"},{"authors":["Hyunsung Kim"],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways: - **Create** slides using Wowchemy's [*Slides*](https://wowchemy.com/docs/managing-content/#create-slides) feature and link using `slides` parameter in the front matter of the talk file - **Upload** an existing slide deck to `static/` and link using `url_slides` parameter in the front matter of the talk file - **Embed** your slides (e.g. Google Slides) or presentation video on this page using [shortcodes](https://wowchemy.com/docs/writing-markdown-latex/). Further event details, including [page elements](https://wowchemy.com/docs/writing-markdown-latex/) such as image galleries, can be added to the body of this page. -- ","date":1645624800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1645624800,"objectID":"bd2643b37e9a1f34774e90619f6aab33","permalink":"https://statkim.github.io/hyunsungkim/talk/robust-principal-component-analysis-applicable-to-partially-observed-functional-data/","publishdate":"2022-02-23T00:00:00Z","relpermalink":"/hyunsungkim/talk/robust-principal-component-analysis-applicable-to-partially-observed-functional-data/","section":"event","summary":"The 11th Conference of the IASC-ARS (The Asian Regional Section of the International Association for Statistical Computing)","tags":["partially observed functional data","covariance estimation","principal component analysis","robustness"],"title":"Robust principal component analysis applicable to partially observed functional data","type":"event"},{"authors":[],"categories":[],"content":"","date":1637980179,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1637980179,"objectID":"84a876ba789bb7232be8d9ed2487fd98","permalink":"https://statkim.github.io/hyunsungkim/post/2020-12-01-r-rmarkdown/","publishdate":"2021-11-27T11:29:39+09:00","relpermalink":"/hyunsungkim/post/2020-12-01-r-rmarkdown/","section":"post","summary":"","tags":[],"title":"2020 12 01 R Rmarkdown","type":"post"},{"authors":["Hyunsung Kim"],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways: - **Create** slides using Wowchemy's [*Slides*](https://wowchemy.com/docs/managing-content/#create-slides) feature and link using `slides` parameter in the front matter of the talk file - **Upload** an existing slide deck to `static/` and link using `url_slides` parameter in the front matter of the talk file - **Embed** your slides (e.g. Google Slides) or presentation video on this page using [shortcodes](https://wowchemy.com/docs/writing-markdown-latex/). Further event details, including [page elements](https://wowchemy.com/docs/writing-markdown-latex/) such as image galleries, can be added to the body of this page. -- ","date":1626867000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1626867000,"objectID":"cdef5e877db686bd9399c71d22dbefdb","permalink":"https://statkim.github.io/hyunsungkim/talk/robust-covariance-estimation-for-partially-observed-functional-data/","publishdate":"2021-07-21T00:00:00Z","relpermalink":"/hyunsungkim/talk/robust-covariance-estimation-for-partially-observed-functional-data/","section":"event","summary":"BERNOULLI-IMS 10th WORLD CONGRESS in PROBABILITY and STATISTICS","tags":["partially observed functional data","covariance estimation","principal component analysis","robustness"],"title":"Robust covariance estimation for partially observed functional data","type":"event"},{"authors":["Hyunsung Kim","XiongZhu Li","Yaeji Lim"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including [code, math, and images](https://wowchemy.com/docs/writing-markdown-latex/). -- ","date":1617235200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617235200,"objectID":"cbdded1ba93a485ef49ce8727de5b695","permalink":"https://statkim.github.io/hyunsungkim/publication/2020-kjas_groupica/","publishdate":"2021-04-01T00:00:00Z","relpermalink":"/hyunsungkim/publication/2020-kjas_groupica/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["functional magnetic resonance imaging","independent component analysis","group independent component analysis","robustness","ROBPCA"],"title":"Robust group independent component analysis","type":"publication"},{"authors":["Hyunsung Kim"],"categories":["R"],"content":"  R에서 데이터를 다루면서 어쩌면 다음과 같은 경험을 해보신 적이 있으실 겁니다.\n변수명이 weather_Jeju, weather_Seoul, weather_Busan, ... 으로 되어있고, 우리는 이 데이터에 같은 처리를 해주고 싶습니다. 하지만 각 변수마다 같은 코드를 반복하여 작성하게 되면 코드가 너무 길어지게 되죠. . .\n이런 경우에 변수명을 문자열 형식으로 자유롭게 가져오고 다시 할당해줄 때 사용할 수 있는 R 함수가 있는데, 바로 get()과 assign()입니다. 이 두 함수는 R base에 있는 함수로 따로 패키지 설치 없이 사용할 수 있습니다.\n\nget() - 문자열 형식으로 되어있는 변수 불러오기 다음과 같이 3개의 변수가 있다고 가정해봅시다.\ndata_A \u0026lt;- 1:5 data_B \u0026lt;- 11:15 data_C \u0026lt;- 21:25 get() 함수를 사용하는 법은 간단합니다. 다음과 같이 함수 argument로 “문자열 형태의 변수명”을 넣어주면 끝입니다.\nget(\u0026quot;문자열 형태의 변수명\u0026quot;) 즉, data_A를 가져오는 방법은 다음과 같습니다.\nget(\u0026quot;data_A\u0026quot;) ## [1] 1 2 3 4 5 또는 변수명이 비슷한 형태를 따른다면 paste() 함수를 활용하여 다음과 같이 반복문에 적용할 수도 있습니다.\nfor (i in c(\u0026quot;A\u0026quot;,\u0026quot;B\u0026quot;,\u0026quot;C\u0026quot;)) { var_name \u0026lt;- paste(\u0026quot;data_\u0026quot;, i, sep = \u0026quot;\u0026quot;) print(var_name) print(get(var_name)) } ## [1] \u0026quot;data_A\u0026quot; ## [1] 1 2 3 4 5 ## [1] \u0026quot;data_B\u0026quot; ## [1] 11 12 13 14 15 ## [1] \u0026quot;data_C\u0026quot; ## [1] 21 22 23 24 25 \n assign() - 문자열 형식으로 되어있는 변수에 새로운 값 할당하기 assign()은 get()과 반대로 문자열 형태로 되어있는 변수에 값을 할당할 때 사용할 수 있으며, 2개의 argument가 필요합니다. 첫 번째 argument에는 “문자열 형태의 변수명”, 두 번째 argument에는 “변수에 넣을 값”을 넣어주면 됩니다.\nassign(\u0026quot;문자열 형태의 변수명\u0026quot;, \u0026quot;변수에 넣을 값\u0026quot;) 예를 들어, 새로운 변수 data_D에 c(1:5)*5 값을 할당하는 법은 다음과 같습니다.\n# data_D \u0026lt;- c(1:5)*5 # 아래와 같은 결과 assign(\u0026quot;data_D\u0026quot;, c(1:5)*5) print(data_D) ## [1] 5 10 15 20 25  ","date":1611792000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1611792000,"objectID":"41396fdc28e52a5ef62384d07e5529df","permalink":"https://statkim.github.io/hyunsungkim/post/2021-01-28-get-assign/","publishdate":"2021-01-28T00:00:00Z","relpermalink":"/hyunsungkim/post/2021-01-28-get-assign/","section":"post","summary":"R에서 데이터를 다루면서 어쩌면 다음과 같은 경험을 해보신 적이 있으실 겁니다.\n변수명이 weather_Jeju, weather_Seoul, weather_Busan, ... 으로 되어있고, 우리는 이 데이터에 같은 처리를 해주고 싶습니다. 하지만 각 변수마다 같은 코드를 반복하여 작성하게 되면 코드가 너무 길어지게 되죠.","tags":["R","R 꿀팁"],"title":"변수명을 문자열 형식으로 자유롭게 다루기 - get과 assign","type":"post"},{"authors":["Hyunsung Kim"],"categories":["Demo"],"content":"Overview  The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It\u0026rsquo;s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more    The template is mobile first with a responsive design to ensure that your site looks stunning on every device.  Get Started  👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Guide and Release Notes  Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy\u0026rsquo;s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem  Hugo Academic CLI: Automatically import publications from BibTeX  Inspiration Check out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures  Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://statkim.github.io/hyunsungkim/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/hyunsungkim/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":null,"content":"  Performed the statistical analysis on the difference of the death rate and PDC(Proportion of Days Covered) between patients who registered in the project and those who did not.\n  The statistical software, SAS and SQL query were used to get the data from the NHIS (National Health Insurance Service) database and the analysis.\n  Performed the survival analysis and GEE (Generalized estimating equation).\n  ","date":1582848000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1582848000,"objectID":"069827dca5ece1a6113b2860208471b3","permalink":"https://statkim.github.io/hyunsungkim/project/2019-gyeonggi-godang/","publishdate":"2020-02-28T00:00:00Z","relpermalink":"/hyunsungkim/project/2019-gyeonggi-godang/","section":"project","summary":"경기도 공공보건의료지원단 (2019.07 ~ 2020.02)","tags":["nhis database","survival analysis","gee"],"title":"경기도 고혈압·당뇨병 등록관리사업 효과평가 분석","type":"project"},{"authors":null,"categories":null,"content":"  Developed the program which get the text data related with specific keywords and transform it to tabular type using the Python with Selenium and Pandas.\n  Preprocessed the weather data from KMA (Korea Meteorological Administration) API.\n  Preprocessed the demand dataset from the Hyundai Mobis database using SQL query and R with tidyverse.\n  ","date":1569801600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1569801600,"objectID":"70bcee24b578d55784f8c9c1957df0bb","permalink":"https://statkim.github.io/hyunsungkim/project/2019-hyundai-mobis/","publishdate":"2019-09-30T00:00:00Z","relpermalink":"/hyunsungkim/project/2019-hyundai-mobis/","section":"project","summary":"현대모비스, 부품운영팀 (2019.02 ~ 2019.09)","tags":["time series","predictive modeling","web crawling"],"title":"빅데이터 기반 서비스부품 수요예측 강화","type":"project"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Charts Academic supports the popular Plotly chart format.\nSave your Plotly JSON in your page folder, for example chart.json, and then add the {{\u0026lt; chart data=\u0026quot;chart\u0026quot; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\n  (function() { let a = setInterval( function() { if ( typeof window.Plotly === 'undefined' ) { return; } clearInterval( a ); Plotly.d3.json(\"./line-chart.json\", function(chart) { Plotly.plot('chart-478196235', chart.data, chart.layout, {responsive: true}); }); }, 500 ); })();  You might also find the Plotly JSON Editor useful.\nMath Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\\\\\ math linebreak:\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$  renders as\n$$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\\n1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Callouts Academic supports a shortcode for callouts, also referred to as asides, hints, or alerts. By wrapping a paragraph in {{% callout note %}} ... {{% /callout %}}, it will render as an aside.\n{{% callout note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /callout %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Spoilers Add a spoiler to a page to reveal text, such as an answer to a question, after a button is clicked.\n{{\u0026lt; spoiler text=\u0026quot;Click to view the spoiler\u0026quot; \u0026gt;}} You found me! {{\u0026lt; /spoiler \u0026gt;}}  renders as\nClick to view the spoiler You found me!\n Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://statkim.github.io/hyunsungkim/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/hyunsungkim/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":["Hyunsung Kim"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')     print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://statkim.github.io/hyunsungkim/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/hyunsungkim/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/media/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://statkim.github.io/hyunsungkim/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/hyunsungkim/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"     Developed a web application that predicts the congestion level of major tourist destinations named \u0026ldquo;눈치싸움 대작전\u0026rdquo; by \u0026ldquo;다섯명\u0026rdquo;, a five-member team.\n  Developed the web server using Python module flask, and constructed the database using sqlite3.\n  Constructed the LightGBM model to predict the congestion level of the places using foot traffic data from SKT.\n  The source codes of the program is available on https://github.com/statKim/Da_Vinci_SW_Hackathon.\n  ","date":1543536000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543536000,"objectID":"9fa26dc8a8d47d629a2d7c7f3cfad1b3","permalink":"https://statkim.github.io/hyunsungkim/project/2018-da-vinci-sw-hackathon/","publishdate":"2018-11-30T00:00:00Z","relpermalink":"/hyunsungkim/project/2018-da-vinci-sw-hackathon/","section":"project","summary":"Da Vinci Software Education Institute, Chung-Ang University (2018.11)","tags":["software development","machine learning","predictive modeling"],"title":"Da Vinci SW Hackathon","type":"project"},{"authors":["Hyunsung Kim"],"categories":["Python"],"content":"가상환경을 사용하는 이유  여러 사람과 협업 또는 만들어 놓은 코드를 분석할 때 각 프로젝트마다 파이썬, 라이브러리 버전이 다름 이로 인해 기존 로컬에 영향이 가지 않는 별개의 가상환경을 만들고 그 안에서만 사용할 패키지를 설치하여 사용!!  1. conda를 사용하여 가상환경 만들기   가상환경 생성 # 아나콘다 버전 확인 conda --version # 아나콘다 업데이트 conda update conda # 아나콘다 가상환경 생성 conda create --name 가상환경이름 파이썬버전 # 예) 파이썬 3.6.4 버전 설치 \u0026amp; 가상환경 이름은 test conda create --name test python=3.6.4    가상환경 활성화 및 비활성화 # 설치된 가상환경 리스트 확인 conda info --envs # 가상환경 활성화 activate 가상환경이름 # 가상환경 비활성화 deactivate    가상환경 패키지 설치 및 확인 (가상환경 activate된 상태에서 실행) # 가상환경에 설치된 package 확인 pip list # or conda list # pip upgrade python -m pip install --upgrade pip # 필요한 library 한번에 설치 pip install -r requirements.txt # 위 방법으로 안될 때는 아래에 있는 방법 사용해볼것!! # conda를 이용해서 package 설치 conda install 패키지명 # conda를 이용해서 한 번에 설치 conda install --file requirements.txt    가상환경 삭제 (root 계정으로 activate 후 삭제하는 것을 추천) # 가상환경 삭제 conda remove --name 가상환경이름 --all # 예) conda remove --name test --all # 가상환경 삭제되었는지 확인 conda info --envs    2. Virtualenv를 사용하여 가상환경 만들기   virtualenv 설치 pip install virtualenv\t   가상환경 만들기  현재 경로에 가상환경 폴더 생성됨  # 가상환경 폴더 생성할 경로로 이동 cd 경로 # 가상환경 생성 virtualenv 가상환경이름\t   가상환경 활성화 및 패키지 설치 # 가상환경 활성화 call 경로/Script/activate # 활성화되면 terminal 왼쪽에 (가상환경이름)이 생긴다!! # 가상환경에 설치된 package 확인 pip list # 필요한 library 한번에 설치 # (requirements.txt에 필요 library 목록이 있음) # 가상환경 활성화된 상태에서!! pip install -r requirements.txt # 가상환경 비활성화 deactivate    가상환경 삭제  가상환경 폴더를 삭제하면 됨!!!  rm -rf 경로/가상환경이름 (리눅스) rmdir /s 경로/가상환경이름 (cmd - /s:하위 모든 파일 삭제)    3. Jupyter notebook에서 가상환경 사용하기   가상환경에 새로운 kernel 만들기   kernel 생성 경로 : C:\\Users\\window계정명\\AppData\\Roaming\\jupyter\\kernels\n# 가상환경 활성화 activate \u0026lt;가상환경이름\u0026gt; # 가상환경에 ipykernel을 설치!! pip install ipykernel # jupyter notebook에서 가상환경(kernel)을 선택할 수 있게 만듬 python -m ipykernel install --user --name 가상환경이름 --display-name \u0026quot;\u0026lt;kernel에 표현할 이름\u0026gt;\u0026quot;      jupyter에 추가된 kernel 삭제하기 # 가상환경을 파이썬3로 만들기(만약 현재 파이썬 버전이 2.xx일 떄) virtualenv -p python3 \u0026lt;가상환경이름\u0026gt; # 현재 가지고 있는 kernel 종류 jupyter kernelspec list # 생성한 kernel 지우는 방법 jupyter kernelspec remove \u0026lt;지우고 싶은 kernel명\u0026gt;    4. Pycharm에서 가상환경 사용하기 File -\u0026gt; Settings -\u0026gt; Project -\u0026gt; Project Interpreter -\u0026gt; +\n-\u0026gt; 해당되는 가상환경 선택 (ex - conda or virtualenv 등)\n-\u0026gt; Existing environment 탭 클릭!! -\u0026gt; Interpreter 옆의 ... 클릭\n-\u0026gt; 가상환경 폴더 내에 있는 python.exe 경로 선택 (ex - C:/Anaconda/envs/가상환경이름/python.exe)\n Reference  http://niceman.tistory.com/85  ","date":1541030400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541030400,"objectID":"aeefd5037fdc59d5f815f1521e60fd2f","permalink":"https://statkim.github.io/hyunsungkim/post/2018-11-01-virtual-env/","publishdate":"2018-11-01T00:00:00Z","relpermalink":"/hyunsungkim/post/2018-11-01-virtual-env/","section":"post","summary":"가상환경을 사용하는 이유  여러 사람과 협업 또는 만들어 놓은 코드를 분석할 때 각 프로젝트마다 파이썬, 라이브러리 버전이 다름 이로 인해 기존 로컬에 영향이 가지 않는 별개의 가상환경을 만들고 그 안에서만 사용할 패키지를 설치하여 사용!","tags":["가상환경","conda","Virtualenv","Python"],"title":"Python 가상환경 만들기","type":"post"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"f26b5133c34eec1aa0a09390a36c2ade","permalink":"https://statkim.github.io/hyunsungkim/admin/config.yml","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/hyunsungkim/admin/config.yml","section":"","summary":"","tags":null,"title":"","type":"wowchemycms"}]